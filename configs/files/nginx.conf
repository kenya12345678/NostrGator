# Nginx Configuration for Nostr File Server
# NIP-96 compatible file storage with CORS support

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # File upload limits
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    server {
        listen 80;
        server_name localhost;
        
        # Root directory for files
        root /usr/share/nginx/html;
        
        # CORS headers for Nostr compatibility
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        # Handle preflight requests
        location = /options {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            return 405;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
        
        # File upload endpoint (POST)
        location /upload {
            # This would need a backend service for actual uploads
            # For now, return method not allowed
            return 405 "Upload functionality requires backend service\n";
            add_header Content-Type text/plain;
        }
        
        # File serving
        location /files/ {
            alias /usr/share/nginx/html/files/;
            
            # Enable directory browsing (optional)
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
            
            # Cache control for files
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Security headers
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options DENY;
            add_header X-XSS-Protection "1; mode=block";
            
            # Handle range requests for large files
            location ~* \.(mp4|webm|ogg|mp3|wav|flac|aac|m4a|mov|avi|mkv)$ {
                add_header Accept-Ranges bytes;
            }
        }
        
        # NIP-96 info endpoint
        location /.well-known/nostr/nip96 {
            return 200 '{
                "api_url": "http://localhost:7006/upload",
                "download_url": "http://localhost:7006/files",
                "supported_nips": [96],
                "tos_url": "",
                "content_types": ["image/*", "video/*", "audio/*", "text/*"],
                "max_upload_size": 104857600
            }';
            add_header Content-Type application/json;
        }
        
        # Default location
        location / {
            return 200 "Nostr File Server - Ready\n";
            add_header Content-Type text/plain;
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            return 404 "File not found\n";
            add_header Content-Type text/plain;
        }
        
        location = /50x.html {
            return 500 "Server error\n";
            add_header Content-Type text/plain;
        }
    }
}
